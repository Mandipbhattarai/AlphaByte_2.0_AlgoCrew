# -*- coding: utf-8 -*-
"""Ransomware_FeatureExtractor.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19dz-mwMQCpy6JuxbZfikZyYN52gHsoZD
"""

#!pip install pefile

import pefile
import hashlib
import re

def extract_features(file_path):
    features = {}

    # FileName
    features['FileName'] = file_path

    # md5Hash
    with open(file_path, "rb") as f:
        file_content = f.read()
        features['md5Hash'] = hashlib.md5(file_content).hexdigest()

    pe = pefile.PE(file_path)

    # Machine
    features['Machine'] = pe.FILE_HEADER.Machine

    # DebugSize and DebugRVA
    features['DebugSize'] = pe.OPTIONAL_HEADER.DATA_DIRECTORY[pefile.DIRECTORY_ENTRY['IMAGE_DIRECTORY_ENTRY_DEBUG']].Size
    features['DebugRVA'] = pe.OPTIONAL_HEADER.DATA_DIRECTORY[pefile.DIRECTORY_ENTRY['IMAGE_DIRECTORY_ENTRY_DEBUG']].VirtualAddress

    # MajorImageVersion
    features['MajorImageVersion'] = pe.OPTIONAL_HEADER.MajorImageVersion

    # MajorOSVersion
    features['MajorOSVersion'] = pe.OPTIONAL_HEADER.MajorOperatingSystemVersion

    # ExportRVA and ExportSize
    features['ExportRVA'] = pe.OPTIONAL_HEADER.DATA_DIRECTORY[pefile.DIRECTORY_ENTRY['IMAGE_DIRECTORY_ENTRY_EXPORT']].VirtualAddress
    features['ExportSize'] = pe.OPTIONAL_HEADER.DATA_DIRECTORY[pefile.DIRECTORY_ENTRY['IMAGE_DIRECTORY_ENTRY_EXPORT']].Size

    # IatVRA
    features['IatVRA'] = pe.OPTIONAL_HEADER.DATA_DIRECTORY[pefile.DIRECTORY_ENTRY['IMAGE_DIRECTORY_ENTRY_IAT']].VirtualAddress

    # MajorLinkerVersion and MinorLinkerVersion
    features['MajorLinkerVersion'] = pe.OPTIONAL_HEADER.MajorLinkerVersion
    features['MinorLinkerVersion'] = pe.OPTIONAL_HEADER.MinorLinkerVersion

    # NumberOfSections
    features['NumberOfSections'] = pe.FILE_HEADER.NumberOfSections

    # SizeOfStackReserve
    features['SizeOfStackReserve'] = pe.OPTIONAL_HEADER.SizeOfStackReserve

    # DllCharacteristics
    features['DllCharacteristics'] = pe.OPTIONAL_HEADER.DllCharacteristics

    # ResourceSize
    features['ResourceSize'] = pe.OPTIONAL_HEADER.DATA_DIRECTORY[pefile.DIRECTORY_ENTRY['IMAGE_DIRECTORY_ENTRY_RESOURCE']].Size

    # BitcoinAddresses
    bitcoin_regex = re.compile(r'([13][a-km-zA-HJ-NP-Z1-9]{25,34})')
    features['BitcoinAddresses'] = bitcoin_regex.findall(file_content.decode('utf-8', errors='ignore'))

    # Benign (this would normally be provided by your labeled dataset)
    #features['Benign'] = 0  # Example default value

    return features

# Example usage
file_path = 'VoicemodInstaller_1.3.3-yoem04.exe' #a single exe is tested just as an example
features = extract_features(file_path)
if features['BitcoinAddresses'] == []:
  features['BitcoinAddresses'] = 0
else:
  features['BitcoinAddresses'] = 1
print(features)

import joblib

loaded_model = joblib.load("random_forest_model.pkl")

import csv

with open('data.csv', 'w') as f:
    writer = csv.DictWriter(f, fieldnames=features.keys())
    writer.writeheader()
    writer.writerow(features)
import pandas as pd
df = pd.read_csv('data.csv')
df.head()
df.drop(['FileName','md5Hash'], axis=1, inplace=True)
#df['BitcoinAddresses'] = 0 if df['BitcoinAddresses'].isna().all() else 1
#print(df)
res = loaded_model.predict(df.iloc[[0]])
if res == 0:
  print("Malicious")
else:
  print("Benign")
# 0- Malicious
# 1- Benign
